name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_integration_tests:
        description: 'Run integration tests'
        required: false
        default: false
        type: boolean

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test ./pkg/... -v
    
    - name: Check test coverage
      run: |
        go test ./pkg/... -coverprofile=coverage.out
        go tool cover -func=coverage.out
  
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install golangci-lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
    
    - name: Run golangci-lint
      run: golangci-lint run ./...
  
  build:
    runs-on: ubuntu-latest
    needs: [unit-test, lint]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o devpod-provider-oracle-linux-amd64 .
    
    - name: Build for macOS
      run: GOOS=darwin GOARCH=amd64 go build -o devpod-provider-oracle-darwin-amd64 .
    
    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -o devpod-provider-oracle-windows-amd64.exe .
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          devpod-provider-oracle-linux-amd64
          devpod-provider-oracle-darwin-amd64
          devpod-provider-oracle-windows-amd64.exe
  
  integration-test:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.inputs.run_integration_tests == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Set up OCI config
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_CONFIG }}" > ~/.oci/config
        chmod 600 ~/.oci/config
    
    - name: Run integration tests
      env:
        RUN_INTEGRATION_TESTS: "true"
        OCI_CONFIG_FILE: ~/.oci/config
        OCI_PROFILE: DEFAULT
        COMPARTMENT_ID: ${{ secrets.OCI_COMPARTMENT_ID }}
        REGION: ${{ secrets.OCI_REGION }}
        AVAILABILITY_DOMAIN: ${{ secrets.OCI_AVAILABILITY_DOMAIN }}
        DISK_IMAGE: ${{ secrets.OCI_DISK_IMAGE }}
        DISK_SIZE: "50"
        MACHINE_TYPE: "VM.Standard.E4.Flex"
        MACHINE_FOLDER: /tmp/devpod-test
      run: |
        mkdir -p /tmp/devpod-test
        go test ./integration -tags=integration -v 